{
	"info": {
		"_postman_id": "c30365b3-84de-4f1f-a676-99f56b2e8ea6",
		"name": "qa_assignment_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19964247"
	},
	"item": [
		{
			"name": "Posts",
			"item": [
				{
					"name": "Positive(200-204)",
					"item": [
						{
							"name": "jsonplaceholder.typicode.com/posts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"userId\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"id\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"title\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"body\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\"\r",
											"      ]\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my new post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts Without userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my new post\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts Without body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts Without title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\",\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n    \"body\": \"This is my new post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts Cyrillic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Мој нови пост\",\r\n    \"body\": \"Добар дан!\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"عَرَبِيَّة\",\r\n    \"body\": \"أَبْجَدِيَّة\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Without userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my post on the post\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Without body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Without title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Cyrillic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Мој пост\",\r\n    \"body\": \"И тако...\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"عَرَبِيَّة\",\r\n    \"body\": \"عَرَبِيَّة\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Without userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my post on the post\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Without body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Without title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Cyrillic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Мој пост\",\r\n    \"body\": \"И тако...\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"userId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"title\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"عَرَبِيَّة\",\r\n    \"body\": \"عَرَبِيَّة\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Negative(40*)",
					"item": [
						{
							"name": "jsonplaceholder.typicode.com/posts/:id String id Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "kjhn"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Non-existing Id Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "456465"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts Integer title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": 456,\r\n    \"body\": \"This is my new post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts String userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My post\",\r\n    \"body\": \"This is my new post\",\r\n    \"userId\": \"1\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts Integer body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My first post\",\r\n    \"body\": 203654450,\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id String id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "mkhn"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Non-existed id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "101"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Integer title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": 456,\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Integer body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Post\",\r\n    \"body\": 3421,\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id String userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My post\",\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": \"1\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id String id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "mkhn"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Non-existed id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My new post\",\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "101"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Integer title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": 456,\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Integer body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Post\",\r\n    \"body\": 3421,\r\n    \"userId\": 1\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id String userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"My post\",\r\n    \"body\": \"This is my post on the post\",\r\n    \"userId\": \"1\"\r\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id String id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "kjhn"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/posts/:id Non-existing Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "456465"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Positive(200-204)",
					"item": [
						{
							"name": "jsonplaceholder.typicode.com/comments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"postId\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"id\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"email\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"body\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\"\r",
											"      ]\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Without postId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Without email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Without name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Without postId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"عَرَبِيَّة\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"أَبْجَدِيَّة\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Cyrillic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"Коментар\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"Коментаришем ето\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Without body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Without email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Without name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Without postId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"عَرَبِيَّة\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"أَبْجَدِيَّة\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Cyrillic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"Коментар\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"Коментаришем ето\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Without body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Without email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Without name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Without postId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"عَرَبِيَّة\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"أَبْجَدِيَّة\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Cyrillic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"postId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"body\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"Коментар\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"Коментаришем ето\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Negative(40*)",
					"item": [
						{
							"name": "jsonplaceholder.typicode.com/comments/:id String id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "jhvgjhgv"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Non-existing id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "502"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments String postId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": \"1\",\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Integer body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": 1351\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Wrong email format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"peraperic.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Integer email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": \"1\",\r\n\"name\": \"My comment\",\r\n\"email\": 20452,\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments Integer name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": 254823,\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id String Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "dfsasdf"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Non existing Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "502"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Integer body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": 2542\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id String postId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": \"1\",\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Wrong email format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"peraperic.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Integer email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": 24525,\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Integer name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": 25442,\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id String Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "dfsasdf"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Non existing Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "502"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Integer body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": 2542\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id String postId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": \"1\",\r\n\"name\": \"My comment\",\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Wrong email format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": \"peraperic.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Integer email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": \"My comment\",\r\n\"email\": 24525,\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Integer name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"postId\": 1,\r\n\"name\": 25442,\r\n\"email\": \"pera@peric.com\",\r\n\"body\": \"My recent comment\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id String id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "fsdfsdz"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/comments/:id Non-existing id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/comments/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "505"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Positive(200-204)",
					"item": [
						{
							"name": "jsonplaceholder.typicode.com/users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"username\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"email\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"address\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"street\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"suite\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"city\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"zipcode\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"geo\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"lat\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"lng\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        },\r",
											"        \"phone\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"website\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"company\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"name\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"catchPhrase\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bs\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\"\r",
											"      ]\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "7"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without bs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without catchPhrase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without companyName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without website",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without geo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\"\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without lng",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without lat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without zipcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without street",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Without name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Cyrillic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Пера\",\r\n    \"username\": \"Перић\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Шћепана Шћекића\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Куршумлија\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Балкан промет\",\r\n        \"catchPhrase\": \"Само потпун кретен не једе алву ћетен\",\r\n        \"bs\": \"трговина\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"أَبْجَدِيَّة\",\r\n    \"username\": \"أَبْجَدِيَّة\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"أَبْجَدِيَّة\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"أَبْجَدِيَّة\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without bs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without catchPhrase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without companyName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without website",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:idWithout geo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\"\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without lng",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without lat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without zipcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without street",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Cyrillic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Пера\",\r\n    \"username\": \"Перић\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Шћепана Шћекића\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Куршумлија\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Балкан промет\",\r\n        \"catchPhrase\": \"Само потпун кретен не једе алву ћетен\",\r\n        \"bs\": \"трговина\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"أَبْجَدِيَّة\",\r\n    \"username\": \"أَبْجَدِيَّة\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"أَبْجَدِيَّة\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"أَبْجَدِيَّة\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without bs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without catchPhrase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without companyName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without website",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without address",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:idWithout geo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\"\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without lng",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without lat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without zipcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without street",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Without name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Cyrillic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Пера\",\r\n    \"username\": \"Перић\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Шћепана Шћекића\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Куршумлија\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Балкан промет\",\r\n        \"catchPhrase\": \"Само потпун кретен не једе алву ћетен\",\r\n        \"bs\": \"трговина\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Arabic",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let schema = {\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"id\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"name\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"username\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"email\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"address\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"street\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"suite\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"city\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"zipcode\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"geo\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"lat\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"lng\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"          ]\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    },\r",
											"    \"phone\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"website\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"company\": {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"name\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"catchPhrase\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"bs\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"id\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body validation\", function() {\r",
											"    pm.response.to.have.jsonSchema(schema)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"أَبْجَدِيَّة\",\r\n    \"username\": \"أَبْجَدِيَّة\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"أَبْجَدِيَّة\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"أَبْجَدِيَّة\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "7"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Negative(40*)",
					"item": [
						{
							"name": "jsonplaceholder.typicode.com/users/:id String id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "gbfdgd"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Non-existing id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "25"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer bs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": 2655\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer catchPhrase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": 527,\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer companyName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": 24,\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer website",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": 25,\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": 5,\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer lng",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": 81.1496\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer lat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": -37.315,\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer zipcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": 35412,\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": 242,\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": 556,\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer street",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": 45645,\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Wrong email format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"peraperic.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": 465,\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": 23,\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users Integer name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": 25,\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id String id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "gbfdgd"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Non-existing id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "25"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer bs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": 2655\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer catchPhrase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": 527,\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer companyName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": 24,\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer website",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": 25,\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": 5,\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer lng",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": 81.1496\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer lat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": -37.315,\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer zipcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": 35412,\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": 242,\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": 556,\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer street",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": 45645,\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Wrong email format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"peraperic.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": 465,\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": 23,\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": 25,\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id String id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "gbfdgd"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Non-existing id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "25"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer bs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": 2655\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer catchPhrase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": 527,\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer companyName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": 24,\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer website",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": 25,\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer phone",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": 5,\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer lng",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": 81.1496\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer lat",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": -37.315,\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer zipcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": 35412,\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer city",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": 242,\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer suite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": 556,\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer street",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": 45645,\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Wrong email format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": \"peraperic.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": \"Peric\",\r\n    \"email\": 465,\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pera\",\r\n    \"username\": 23,\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Integer name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": 25,\r\n    \"username\": \"Peric\",\r\n    \"email\": \"pera@peric.com\",\r\n    \"address\": {\r\n        \"street\": \"Scepana Scekica\",\r\n        \"suite\": \"556\",\r\n        \"city\": \"Kursumlija\",\r\n        \"zipcode\": \"35412\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"0655555555\",\r\n    \"website\": \"srecniljudi.org\",\r\n    \"company\": {\r\n        \"name\": \"Balkan promet\",\r\n        \"catchPhrase\": \"Samo potpun kreten ne jede alvu ceten\",\r\n        \"bs\": \"trgovina\"\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id String id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "gbfdgd"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "jsonplaceholder.typicode.com/users/:id Non-existing id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/:id",
									"protocol": "https",
									"host": [
										"jsonplaceholder",
										"typicode",
										"com"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "25"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}